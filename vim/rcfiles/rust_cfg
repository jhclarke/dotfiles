"********************
" Rust Configuration
"********************
" THIS IS OLD IN CASE OF ISSUES WITH COC. REPLACE WITH COC CONFIG SETTINGS WHEN
" OPTIMIZED

" let g:ycm_rust_src_path = '/home/agathos/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src'

" Racer
" set hidden
" let g:racer_cmd = "/home/agathos/.cargo/bin/racer"
" let g:racer_experimental_completer = 1
" au FileType rust nmap <leader>rx <Plug>(rust-doc)
" au FileType rust nmap <leader>rd <Plug>(rust-def)
" au FileType rust nmap <leader>rs <Plug>(rust-def-split)

" Neomake
" Gross hack to stop Neomake running when exitting because it creates a zombie cargo check process
" which holds the lock and never exits. But then, if you only have QuitPre, closing one pane will
" disable neomake, so BufEnter reenables when you enter another buffer.
" let s:quitting = 0
" au QuitPre *.rs let s:quitting = 1
" au BufEnter *.rs let s:quitting = 0
" au BufWritePost *.rs if ! s:quitting | Neomake | else | echom "Neomake disabled"| endif
" au QuitPre *.ts let s:quitting = 1
" au BufEnter *.ts let s:quitting = 0
" au BufWritePost *.ts if ! s:quitting | Neomake | else | echom "Neomake disabled"| endif
" let g:neomake_warning_sign = {'text': '?'}

" vim:ft=vim
